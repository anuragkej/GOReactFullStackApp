{
    "sourceFile": "client/src/components/TodoList.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 11,
            "patches": [
                {
                    "date": 1717912473154,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1717912774692,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -101,8 +101,10 @@\n         textTransform={\"uppercase\"}\n         fontWeight={\"bold\"}\n         textAlign={\"center\"}\n         my={2}\n+        bgGradient=\"linear(to-l, #0b85f8, #FF0080)\"\n+        bgClip=\"text\"\n       >\n         Today's Tasks\n       </Text>\n       {isLoading && (\n"
                },
                {
                    "date": 1717912786509,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,9 @@\n import { useState } from \"react\";\n import TodoItem from \"./TodoItem\";\n \n const TodoList = () => {\n-  const [isLoading, setIsLoading] = useState(true);\n+  const [isLoading, setIsLoading] = useState(false);\n   const todos = [\n     {\n       _id: 1,\n       body: \"Buy groceries\",\n"
                },
                {
                    "date": 1717948664259,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,36 +65,35 @@\n // export default TodoList;\n \n // STARTER CODE:\n \n-import { Flex, Spinner, Stack, Text } from \"@chakra-ui/react\";\n-import { useState } from \"react\";\n+import { Flex, Spinner, Stack, Text, useQuery } from \"@chakra-ui/react\";\n import TodoItem from \"./TodoItem\";\n \n+export type Todo = {\n+  _id: number;\n+  body: string;\n+  completed: boolean;\n+};\n+\n const TodoList = () => {\n-  const [isLoading, setIsLoading] = useState(false);\n-  const todos = [\n-    {\n-      _id: 1,\n-      body: \"Buy groceries\",\n-      completed: true,\n+  const [isLoading, setIsLoading] = useState(true);\n+  const { data: todos, isLoading } = useQuery<Todo[]>({\n+    queryKey: [\"todos\"],\n+    queryFn: async () => {\n+      try {\n+        const res = await fetch(\"http://127.0.0.1:4001/api/todos\");\n+        const data = await res.json();\n+\n+        if (!res.ok) {\n+          throw new Error(data.error || \"Something went wrong\");\n+        }\n+        return data || [];\n+      } catch (error) {\n+        console.log(error);\n+      }\n     },\n-    {\n-      _id: 2,\n-      body: \"Walk the dog\",\n-      completed: false,\n-    },\n-    {\n-      _id: 3,\n-      body: \"Do laundry\",\n-      completed: false,\n-    },\n-    {\n-      _id: 4,\n-      body: \"Cook dinner\",\n-      completed: true,\n-    },\n-  ];\n+  });\n   return (\n     <>\n       <Text\n         fontSize={\"4xl\"}\n"
                },
                {
                    "date": 1717948708329,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,10 +65,11 @@\n // export default TodoList;\n \n // STARTER CODE:\n \n-import { Flex, Spinner, Stack, Text, useQuery } from \"@chakra-ui/react\";\n+import { Flex, Spinner, Stack, Text } from \"@chakra-ui/react\";\n import TodoItem from \"./TodoItem\";\n+import { useQuery } from \"@tanstack/react-query\";\n \n export type Todo = {\n   _id: number;\n   body: string;\n"
                },
                {
                    "date": 1717948721352,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,8 @@\n   completed: boolean;\n };\n \n const TodoList = () => {\n-  const [isLoading, setIsLoading] = useState(true);\n   const { data: todos, isLoading } = useQuery<Todo[]>({\n     queryKey: [\"todos\"],\n     queryFn: async () => {\n       try {\n"
                },
                {
                    "date": 1717949081129,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,130 @@\n+// import { Flex, Spinner, Stack, Text } from \"@chakra-ui/react\";\n+\n+// import TodoItem from \"./TodoItem\";\n+// import { useQuery } from \"@tanstack/react-query\";\n+// import { BASE_URL } from \"../App\";\n+\n+// export type Todo = {\n+// \t_id: number;\n+// \tbody: string;\n+// \tcompleted: boolean;\n+// };\n+\n+// const TodoList = () => {\n+// \tconst { data: todos, isLoading } = useQuery<Todo[]>({\n+// \t\tqueryKey: [\"todos\"],\n+// \t\tqueryFn: async () => {\n+// \t\t\ttry {\n+// \t\t\t\tconst res = await fetch(BASE_URL + \"/todos\");\n+// \t\t\t\tconst data = await res.json();\n+\n+// \t\t\t\tif (!res.ok) {\n+// \t\t\t\t\tthrow new Error(data.error || \"Something went wrong\");\n+// \t\t\t\t}\n+// \t\t\t\treturn data || [];\n+// \t\t\t} catch (error) {\n+// \t\t\t\tconsole.log(error);\n+// \t\t\t}\n+// \t\t},\n+// \t});\n+\n+// \treturn (\n+// \t\t<>\n+// \t\t\t<Text\n+// \t\t\t\tfontSize={\"4xl\"}\n+// \t\t\t\ttextTransform={\"uppercase\"}\n+// \t\t\t\tfontWeight={\"bold\"}\n+// \t\t\t\ttextAlign={\"center\"}\n+// \t\t\t\tmy={2}\n+// \t\t\t\tbgGradient='linear(to-l, #0b85f8, #00ffff)'\n+// \t\t\t\tbgClip='text'\n+// \t\t\t>\n+// \t\t\t\tToday's Tasks\n+// \t\t\t</Text>\n+// \t\t\t{isLoading && (\n+// \t\t\t\t<Flex justifyContent={\"center\"} my={4}>\n+// \t\t\t\t\t<Spinner size={\"xl\"} />\n+// \t\t\t\t</Flex>\n+// \t\t\t)}\n+// \t\t\t{!isLoading && todos?.length === 0 && (\n+// \t\t\t\t<Stack alignItems={\"center\"} gap='3'>\n+// \t\t\t\t\t<Text fontSize={\"xl\"} textAlign={\"center\"} color={\"gray.500\"}>\n+// \t\t\t\t\t\tAll tasks completed! ðŸ¤ž\n+// \t\t\t\t\t</Text>\n+// \t\t\t\t\t<img src='/go.png' alt='Go logo' width={70} height={70} />\n+// \t\t\t\t</Stack>\n+// \t\t\t)}\n+// \t\t\t<Stack gap={3}>\n+// \t\t\t\t{todos?.map((todo) => (\n+// \t\t\t\t\t<TodoItem key={todo._id} todo={todo} />\n+// \t\t\t\t))}\n+// \t\t\t</Stack>\n+// \t\t</>\n+// \t);\n+// };\n+// export default TodoList;\n+\n+// STARTER CODE:\n+\n+import { Flex, Spinner, Stack, Text } from \"@chakra-ui/react\";\n+import TodoItem from \"./TodoItem\";\n+import { useQuery } from \"@tanstack/react-query\";\n+\n+export type Todo = {\n+  _id: number;\n+  body: string;\n+  completed: boolean;\n+};\n+\n+const TodoList = () => {\n+  const { data: todos, isLoading } = useQuery<Todo[]>({\n+    queryKey: [\"todos\"],\n+    queryFn: async () => {\n+      try {\n+        const res = await fetch(\"http://127.0.0.1:4001/api/todos\");\n+        const data = await res.json();\n+\n+        if (!res.ok) {\n+          throw new Error(data.error || \"Something went wrong\");\n+        }\n+        return data || [];\n+      } catch (error) {\n+        console.log(error);\n+      }\n+    },\n+  });\n+  return (\n+    <>\n+      <Text\n+        fontSize={\"4xl\"}\n+        textTransform={\"uppercase\"}\n+        fontWeight={\"bold\"}\n+        textAlign={\"center\"}\n+        my={2}\n+        bgGradient=\"linear(to-l, #0b85f8, #FF0080)\"\n+        bgClip=\"text\"\n+      >\n+        Today's Tasks\n+      </Text>\n+      {isLoading && (\n+        <Flex justifyContent={\"center\"} my={4}>\n+          <Spinner size={\"xl\"} />\n+        </Flex>\n+      )}\n+      {!isLoading && todos?.length === 0 && (\n+        <Stack alignItems={\"center\"} gap=\"3\">\n+          <Text fontSize={\"xl\"} textAlign={\"center\"} color={\"gray.500\"}>\n+            All tasks completed! ðŸ¤ž\n+          </Text>\n+          <img src=\"/go.png\" alt=\"Go logo\" width={70} height={70} />\n+        </Stack>\n+      )}\n+      <Stack gap={3}>\n+        {todos?.map((todo) => (\n+          <TodoItem key={todo._id} todo={todo} />\n+        ))}\n+      </Stack>\n+    </>\n+  );\n+};\n+export default TodoList;\n"
                },
                {
                    "date": 1717950092410,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -127,134 +127,4 @@\n     </>\n   );\n };\n export default TodoList;\n-// import { Flex, Spinner, Stack, Text } from \"@chakra-ui/react\";\n-\n-// import TodoItem from \"./TodoItem\";\n-// import { useQuery } from \"@tanstack/react-query\";\n-// import { BASE_URL } from \"../App\";\n-\n-// export type Todo = {\n-// \t_id: number;\n-// \tbody: string;\n-// \tcompleted: boolean;\n-// };\n-\n-// const TodoList = () => {\n-// \tconst { data: todos, isLoading } = useQuery<Todo[]>({\n-// \t\tqueryKey: [\"todos\"],\n-// \t\tqueryFn: async () => {\n-// \t\t\ttry {\n-// \t\t\t\tconst res = await fetch(BASE_URL + \"/todos\");\n-// \t\t\t\tconst data = await res.json();\n-\n-// \t\t\t\tif (!res.ok) {\n-// \t\t\t\t\tthrow new Error(data.error || \"Something went wrong\");\n-// \t\t\t\t}\n-// \t\t\t\treturn data || [];\n-// \t\t\t} catch (error) {\n-// \t\t\t\tconsole.log(error);\n-// \t\t\t}\n-// \t\t},\n-// \t});\n-\n-// \treturn (\n-// \t\t<>\n-// \t\t\t<Text\n-// \t\t\t\tfontSize={\"4xl\"}\n-// \t\t\t\ttextTransform={\"uppercase\"}\n-// \t\t\t\tfontWeight={\"bold\"}\n-// \t\t\t\ttextAlign={\"center\"}\n-// \t\t\t\tmy={2}\n-// \t\t\t\tbgGradient='linear(to-l, #0b85f8, #00ffff)'\n-// \t\t\t\tbgClip='text'\n-// \t\t\t>\n-// \t\t\t\tToday's Tasks\n-// \t\t\t</Text>\n-// \t\t\t{isLoading && (\n-// \t\t\t\t<Flex justifyContent={\"center\"} my={4}>\n-// \t\t\t\t\t<Spinner size={\"xl\"} />\n-// \t\t\t\t</Flex>\n-// \t\t\t)}\n-// \t\t\t{!isLoading && todos?.length === 0 && (\n-// \t\t\t\t<Stack alignItems={\"center\"} gap='3'>\n-// \t\t\t\t\t<Text fontSize={\"xl\"} textAlign={\"center\"} color={\"gray.500\"}>\n-// \t\t\t\t\t\tAll tasks completed! ðŸ¤ž\n-// \t\t\t\t\t</Text>\n-// \t\t\t\t\t<img src='/go.png' alt='Go logo' width={70} height={70} />\n-// \t\t\t\t</Stack>\n-// \t\t\t)}\n-// \t\t\t<Stack gap={3}>\n-// \t\t\t\t{todos?.map((todo) => (\n-// \t\t\t\t\t<TodoItem key={todo._id} todo={todo} />\n-// \t\t\t\t))}\n-// \t\t\t</Stack>\n-// \t\t</>\n-// \t);\n-// };\n-// export default TodoList;\n-\n-// STARTER CODE:\n-\n-import { Flex, Spinner, Stack, Text } from \"@chakra-ui/react\";\n-import TodoItem from \"./TodoItem\";\n-import { useQuery } from \"@tanstack/react-query\";\n-\n-export type Todo = {\n-  _id: number;\n-  body: string;\n-  completed: boolean;\n-};\n-\n-const TodoList = () => {\n-  const { data: todos, isLoading } = useQuery<Todo[]>({\n-    queryKey: [\"todos\"],\n-    queryFn: async () => {\n-      try {\n-        const res = await fetch(\"http://127.0.0.1:4001/api/todos\");\n-        const data = await res.json();\n-\n-        if (!res.ok) {\n-          throw new Error(data.error || \"Something went wrong\");\n-        }\n-        return data || [];\n-      } catch (error) {\n-        console.log(error);\n-      }\n-    },\n-  });\n-  return (\n-    <>\n-      <Text\n-        fontSize={\"4xl\"}\n-        textTransform={\"uppercase\"}\n-        fontWeight={\"bold\"}\n-        textAlign={\"center\"}\n-        my={2}\n-        bgGradient=\"linear(to-l, #0b85f8, #FF0080)\"\n-        bgClip=\"text\"\n-      >\n-        Today's Tasks\n-      </Text>\n-      {isLoading && (\n-        <Flex justifyContent={\"center\"} my={4}>\n-          <Spinner size={\"xl\"} />\n-        </Flex>\n-      )}\n-      {!isLoading && todos?.length === 0 && (\n-        <Stack alignItems={\"center\"} gap=\"3\">\n-          <Text fontSize={\"xl\"} textAlign={\"center\"} color={\"gray.500\"}>\n-            All tasks completed! ðŸ¤ž\n-          </Text>\n-          <img src=\"/go.png\" alt=\"Go logo\" width={70} height={70} />\n-        </Stack>\n-      )}\n-      <Stack gap={3}>\n-        {todos?.map((todo) => (\n-          <TodoItem key={todo._id} todo={todo} />\n-        ))}\n-      </Stack>\n-    </>\n-  );\n-};\n-export default TodoList;\n"
                },
                {
                    "date": 1717963009780,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,130 @@\n+// import { Flex, Spinner, Stack, Text } from \"@chakra-ui/react\";\n+\n+// import TodoItem from \"./TodoItem\";\n+// import { useQuery } from \"@tanstack/react-query\";\n+// import { BASE_URL } from \"../App\";\n+\n+// export type Todo = {\n+// \t_id: number;\n+// \tbody: string;\n+// \tcompleted: boolean;\n+// };\n+\n+// const TodoList = () => {\n+// \tconst { data: todos, isLoading } = useQuery<Todo[]>({\n+// \t\tqueryKey: [\"todos\"],\n+// \t\tqueryFn: async () => {\n+// \t\t\ttry {\n+// \t\t\t\tconst res = await fetch(BASE_URL + \"/todos\");\n+// \t\t\t\tconst data = await res.json();\n+\n+// \t\t\t\tif (!res.ok) {\n+// \t\t\t\t\tthrow new Error(data.error || \"Something went wrong\");\n+// \t\t\t\t}\n+// \t\t\t\treturn data || [];\n+// \t\t\t} catch (error) {\n+// \t\t\t\tconsole.log(error);\n+// \t\t\t}\n+// \t\t},\n+// \t});\n+\n+// \treturn (\n+// \t\t<>\n+// \t\t\t<Text\n+// \t\t\t\tfontSize={\"4xl\"}\n+// \t\t\t\ttextTransform={\"uppercase\"}\n+// \t\t\t\tfontWeight={\"bold\"}\n+// \t\t\t\ttextAlign={\"center\"}\n+// \t\t\t\tmy={2}\n+// \t\t\t\tbgGradient='linear(to-l, #0b85f8, #00ffff)'\n+// \t\t\t\tbgClip='text'\n+// \t\t\t>\n+// \t\t\t\tToday's Tasks\n+// \t\t\t</Text>\n+// \t\t\t{isLoading && (\n+// \t\t\t\t<Flex justifyContent={\"center\"} my={4}>\n+// \t\t\t\t\t<Spinner size={\"xl\"} />\n+// \t\t\t\t</Flex>\n+// \t\t\t)}\n+// \t\t\t{!isLoading && todos?.length === 0 && (\n+// \t\t\t\t<Stack alignItems={\"center\"} gap='3'>\n+// \t\t\t\t\t<Text fontSize={\"xl\"} textAlign={\"center\"} color={\"gray.500\"}>\n+// \t\t\t\t\t\tAll tasks completed! ðŸ¤ž\n+// \t\t\t\t\t</Text>\n+// \t\t\t\t\t<img src='/go.png' alt='Go logo' width={70} height={70} />\n+// \t\t\t\t</Stack>\n+// \t\t\t)}\n+// \t\t\t<Stack gap={3}>\n+// \t\t\t\t{todos?.map((todo) => (\n+// \t\t\t\t\t<TodoItem key={todo._id} todo={todo} />\n+// \t\t\t\t))}\n+// \t\t\t</Stack>\n+// \t\t</>\n+// \t);\n+// };\n+// export default TodoList;\n+\n+// STARTER CODE:\n+\n+import { Flex, Spinner, Stack, Text } from \"@chakra-ui/react\";\n+import TodoItem from \"./TodoItem\";\n+import { useQuery } from \"@tanstack/react-query\";\n+\n+export type Todo = {\n+  _id: number;\n+  body: string;\n+  completed: boolean;\n+};\n+\n+const TodoList = () => {\n+  const { data: todos, isLoading } = useQuery<Todo[]>({\n+    queryKey: [\"todos\"],\n+    queryFn: async () => {\n+      try {\n+        const res = await fetch(\"http://127.0.0.1:4002/api/todos\");\n+        const data = await res.json();\n+\n+        if (!res.ok) {\n+          throw new Error(data.error || \"Something went wrong\");\n+        }\n+        return data || [];\n+      } catch (error) {\n+        console.log(error);\n+      }\n+    },\n+  });\n+  return (\n+    <>\n+      <Text\n+        fontSize={\"4xl\"}\n+        textTransform={\"uppercase\"}\n+        fontWeight={\"bold\"}\n+        textAlign={\"center\"}\n+        my={2}\n+        bgGradient=\"linear(to-l, #0b85f8, #FF0080)\"\n+        bgClip=\"text\"\n+      >\n+        Today's Tasks\n+      </Text>\n+      {isLoading && (\n+        <Flex justifyContent={\"center\"} my={4}>\n+          <Spinner size={\"xl\"} />\n+        </Flex>\n+      )}\n+      {!isLoading && todos?.length === 0 && (\n+        <Stack alignItems={\"center\"} gap=\"3\">\n+          <Text fontSize={\"xl\"} textAlign={\"center\"} color={\"gray.500\"}>\n+            All tasks completed! ðŸ¤ž\n+          </Text>\n+          <img src=\"/go.png\" alt=\"Go logo\" width={70} height={70} />\n+        </Stack>\n+      )}\n+      <Stack gap={3}>\n+        {todos?.map((todo) => (\n+          <TodoItem key={todo._id} todo={todo} />\n+        ))}\n+      </Stack>\n+    </>\n+  );\n+};\n+export default TodoList;\n"
                },
                {
                    "date": 1717963026924,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -127,134 +127,4 @@\n     </>\n   );\n };\n export default TodoList;\n-// import { Flex, Spinner, Stack, Text } from \"@chakra-ui/react\";\n-\n-// import TodoItem from \"./TodoItem\";\n-// import { useQuery } from \"@tanstack/react-query\";\n-// import { BASE_URL } from \"../App\";\n-\n-// export type Todo = {\n-// \t_id: number;\n-// \tbody: string;\n-// \tcompleted: boolean;\n-// };\n-\n-// const TodoList = () => {\n-// \tconst { data: todos, isLoading } = useQuery<Todo[]>({\n-// \t\tqueryKey: [\"todos\"],\n-// \t\tqueryFn: async () => {\n-// \t\t\ttry {\n-// \t\t\t\tconst res = await fetch(BASE_URL + \"/todos\");\n-// \t\t\t\tconst data = await res.json();\n-\n-// \t\t\t\tif (!res.ok) {\n-// \t\t\t\t\tthrow new Error(data.error || \"Something went wrong\");\n-// \t\t\t\t}\n-// \t\t\t\treturn data || [];\n-// \t\t\t} catch (error) {\n-// \t\t\t\tconsole.log(error);\n-// \t\t\t}\n-// \t\t},\n-// \t});\n-\n-// \treturn (\n-// \t\t<>\n-// \t\t\t<Text\n-// \t\t\t\tfontSize={\"4xl\"}\n-// \t\t\t\ttextTransform={\"uppercase\"}\n-// \t\t\t\tfontWeight={\"bold\"}\n-// \t\t\t\ttextAlign={\"center\"}\n-// \t\t\t\tmy={2}\n-// \t\t\t\tbgGradient='linear(to-l, #0b85f8, #00ffff)'\n-// \t\t\t\tbgClip='text'\n-// \t\t\t>\n-// \t\t\t\tToday's Tasks\n-// \t\t\t</Text>\n-// \t\t\t{isLoading && (\n-// \t\t\t\t<Flex justifyContent={\"center\"} my={4}>\n-// \t\t\t\t\t<Spinner size={\"xl\"} />\n-// \t\t\t\t</Flex>\n-// \t\t\t)}\n-// \t\t\t{!isLoading && todos?.length === 0 && (\n-// \t\t\t\t<Stack alignItems={\"center\"} gap='3'>\n-// \t\t\t\t\t<Text fontSize={\"xl\"} textAlign={\"center\"} color={\"gray.500\"}>\n-// \t\t\t\t\t\tAll tasks completed! ðŸ¤ž\n-// \t\t\t\t\t</Text>\n-// \t\t\t\t\t<img src='/go.png' alt='Go logo' width={70} height={70} />\n-// \t\t\t\t</Stack>\n-// \t\t\t)}\n-// \t\t\t<Stack gap={3}>\n-// \t\t\t\t{todos?.map((todo) => (\n-// \t\t\t\t\t<TodoItem key={todo._id} todo={todo} />\n-// \t\t\t\t))}\n-// \t\t\t</Stack>\n-// \t\t</>\n-// \t);\n-// };\n-// export default TodoList;\n-\n-// STARTER CODE:\n-\n-import { Flex, Spinner, Stack, Text } from \"@chakra-ui/react\";\n-import TodoItem from \"./TodoItem\";\n-import { useQuery } from \"@tanstack/react-query\";\n-\n-export type Todo = {\n-  _id: number;\n-  body: string;\n-  completed: boolean;\n-};\n-\n-const TodoList = () => {\n-  const { data: todos, isLoading } = useQuery<Todo[]>({\n-    queryKey: [\"todos\"],\n-    queryFn: async () => {\n-      try {\n-        const res = await fetch(\"http://127.0.0.1:4001/api/todos\");\n-        const data = await res.json();\n-\n-        if (!res.ok) {\n-          throw new Error(data.error || \"Something went wrong\");\n-        }\n-        return data || [];\n-      } catch (error) {\n-        console.log(error);\n-      }\n-    },\n-  });\n-  return (\n-    <>\n-      <Text\n-        fontSize={\"4xl\"}\n-        textTransform={\"uppercase\"}\n-        fontWeight={\"bold\"}\n-        textAlign={\"center\"}\n-        my={2}\n-        bgGradient=\"linear(to-l, #0b85f8, #FF0080)\"\n-        bgClip=\"text\"\n-      >\n-        Today's Tasks\n-      </Text>\n-      {isLoading && (\n-        <Flex justifyContent={\"center\"} my={4}>\n-          <Spinner size={\"xl\"} />\n-        </Flex>\n-      )}\n-      {!isLoading && todos?.length === 0 && (\n-        <Stack alignItems={\"center\"} gap=\"3\">\n-          <Text fontSize={\"xl\"} textAlign={\"center\"} color={\"gray.500\"}>\n-            All tasks completed! ðŸ¤ž\n-          </Text>\n-          <img src=\"/go.png\" alt=\"Go logo\" width={70} height={70} />\n-        </Stack>\n-      )}\n-      <Stack gap={3}>\n-        {todos?.map((todo) => (\n-          <TodoItem key={todo._id} todo={todo} />\n-        ))}\n-      </Stack>\n-    </>\n-  );\n-};\n-export default TodoList;\n"
                },
                {
                    "date": 1717963731792,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,10 +119,10 @@\n           <img src=\"/go.png\" alt=\"Go logo\" width={70} height={70} />\n         </Stack>\n       )}\n       <Stack gap={3}>\n-        {todos?.map((todo) => (\n-          <TodoItem key={todo._id} todo={todo} />\n+        {todos?.map((todo, idx) => (\n+          <TodoItem key={idx} todo={todo} />\n         ))}\n       </Stack>\n     </>\n   );\n"
                },
                {
                    "date": 1717967271386,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,75 +1,9 @@\n-// import { Flex, Spinner, Stack, Text } from \"@chakra-ui/react\";\n+import { Flex, Spinner, Stack, Text } from \"@chakra-ui/react\";\n \n-// import TodoItem from \"./TodoItem\";\n-// import { useQuery } from \"@tanstack/react-query\";\n-// import { BASE_URL } from \"../App\";\n-\n-// export type Todo = {\n-// \t_id: number;\n-// \tbody: string;\n-// \tcompleted: boolean;\n-// };\n-\n-// const TodoList = () => {\n-// \tconst { data: todos, isLoading } = useQuery<Todo[]>({\n-// \t\tqueryKey: [\"todos\"],\n-// \t\tqueryFn: async () => {\n-// \t\t\ttry {\n-// \t\t\t\tconst res = await fetch(BASE_URL + \"/todos\");\n-// \t\t\t\tconst data = await res.json();\n-\n-// \t\t\t\tif (!res.ok) {\n-// \t\t\t\t\tthrow new Error(data.error || \"Something went wrong\");\n-// \t\t\t\t}\n-// \t\t\t\treturn data || [];\n-// \t\t\t} catch (error) {\n-// \t\t\t\tconsole.log(error);\n-// \t\t\t}\n-// \t\t},\n-// \t});\n-\n-// \treturn (\n-// \t\t<>\n-// \t\t\t<Text\n-// \t\t\t\tfontSize={\"4xl\"}\n-// \t\t\t\ttextTransform={\"uppercase\"}\n-// \t\t\t\tfontWeight={\"bold\"}\n-// \t\t\t\ttextAlign={\"center\"}\n-// \t\t\t\tmy={2}\n-// \t\t\t\tbgGradient='linear(to-l, #0b85f8, #00ffff)'\n-// \t\t\t\tbgClip='text'\n-// \t\t\t>\n-// \t\t\t\tToday's Tasks\n-// \t\t\t</Text>\n-// \t\t\t{isLoading && (\n-// \t\t\t\t<Flex justifyContent={\"center\"} my={4}>\n-// \t\t\t\t\t<Spinner size={\"xl\"} />\n-// \t\t\t\t</Flex>\n-// \t\t\t)}\n-// \t\t\t{!isLoading && todos?.length === 0 && (\n-// \t\t\t\t<Stack alignItems={\"center\"} gap='3'>\n-// \t\t\t\t\t<Text fontSize={\"xl\"} textAlign={\"center\"} color={\"gray.500\"}>\n-// \t\t\t\t\t\tAll tasks completed! ðŸ¤ž\n-// \t\t\t\t\t</Text>\n-// \t\t\t\t\t<img src='/go.png' alt='Go logo' width={70} height={70} />\n-// \t\t\t\t</Stack>\n-// \t\t\t)}\n-// \t\t\t<Stack gap={3}>\n-// \t\t\t\t{todos?.map((todo) => (\n-// \t\t\t\t\t<TodoItem key={todo._id} todo={todo} />\n-// \t\t\t\t))}\n-// \t\t\t</Stack>\n-// \t\t</>\n-// \t);\n-// };\n-// export default TodoList;\n-\n-// STARTER CODE:\n-\n-import { Flex, Spinner, Stack, Text } from \"@chakra-ui/react\";\n import TodoItem from \"./TodoItem\";\n import { useQuery } from \"@tanstack/react-query\";\n+import { BASE_URL } from \"../App\";\n \n export type Todo = {\n   _id: number;\n   body: string;\n@@ -80,9 +14,9 @@\n   const { data: todos, isLoading } = useQuery<Todo[]>({\n     queryKey: [\"todos\"],\n     queryFn: async () => {\n       try {\n-        const res = await fetch(\"http://127.0.0.1:4002/api/todos\");\n+        const res = await fetch(BASE_URL + \"/todos\");\n         const data = await res.json();\n \n         if (!res.ok) {\n           throw new Error(data.error || \"Something went wrong\");\n@@ -92,17 +26,18 @@\n         console.log(error);\n       }\n     },\n   });\n+\n   return (\n     <>\n       <Text\n         fontSize={\"4xl\"}\n         textTransform={\"uppercase\"}\n         fontWeight={\"bold\"}\n         textAlign={\"center\"}\n         my={2}\n-        bgGradient=\"linear(to-l, #0b85f8, #FF0080)\"\n+        bgGradient=\"linear(to-l, #0b85f8, #00ffff)\"\n         bgClip=\"text\"\n       >\n         Today's Tasks\n       </Text>\n@@ -119,12 +54,77 @@\n           <img src=\"/go.png\" alt=\"Go logo\" width={70} height={70} />\n         </Stack>\n       )}\n       <Stack gap={3}>\n-        {todos?.map((todo, idx) => (\n-          <TodoItem key={idx} todo={todo} />\n+        {todos?.map((todo) => (\n+          <TodoItem key={todo._id} todo={todo} />\n         ))}\n       </Stack>\n     </>\n   );\n };\n export default TodoList;\n+\n+//STARTER CODE:\n+\n+// import { Flex, Spinner, Stack, Text } from \"@chakra-ui/react\";\n+// import TodoItem from \"./TodoItem\";\n+// import { useQuery } from \"@tanstack/react-query\";\n+\n+// export type Todo = {\n+//   _id: number;\n+//   body: string;\n+//   completed: boolean;\n+// };\n+\n+// const TodoList = () => {\n+//   const { data: todos, isLoading } = useQuery<Todo[]>({\n+//     queryKey: [\"todos\"],\n+//     queryFn: async () => {\n+//       try {\n+//         const res = await fetch(\"http://127.0.0.1:4002/api/todos\");\n+//         const data = await res.json();\n+\n+//         if (!res.ok) {\n+//           throw new Error(data.error || \"Something went wrong\");\n+//         }\n+//         return data || [];\n+//       } catch (error) {\n+//         console.log(error);\n+//       }\n+//     },\n+//   });\n+//   return (\n+//     <>\n+//       <Text\n+//         fontSize={\"4xl\"}\n+//         textTransform={\"uppercase\"}\n+//         fontWeight={\"bold\"}\n+//         textAlign={\"center\"}\n+//         my={2}\n+//         bgGradient=\"linear(to-l, #0b85f8, #FF0080)\"\n+//         bgClip=\"text\"\n+//       >\n+//         Today's Tasks\n+//       </Text>\n+//       {isLoading && (\n+//         <Flex justifyContent={\"center\"} my={4}>\n+//           <Spinner size={\"xl\"} />\n+//         </Flex>\n+//       )}\n+//       {!isLoading && todos?.length === 0 && (\n+//         <Stack alignItems={\"center\"} gap=\"3\">\n+//           <Text fontSize={\"xl\"} textAlign={\"center\"} color={\"gray.500\"}>\n+//             All tasks completed! ðŸ¤ž\n+//           </Text>\n+//           <img src=\"/go.png\" alt=\"Go logo\" width={70} height={70} />\n+//         </Stack>\n+//       )}\n+//       <Stack gap={3}>\n+//         {todos?.map((todo, idx) => (\n+//           <TodoItem key={idx} todo={todo} />\n+//         ))}\n+//       </Stack>\n+//     </>\n+//   );\n+// };\n+// export default TodoList;\n"
                }
            ],
            "date": 1717912473154,
            "name": "Commit-0",
            "content": "// import { Flex, Spinner, Stack, Text } from \"@chakra-ui/react\";\n\n// import TodoItem from \"./TodoItem\";\n// import { useQuery } from \"@tanstack/react-query\";\n// import { BASE_URL } from \"../App\";\n\n// export type Todo = {\n// \t_id: number;\n// \tbody: string;\n// \tcompleted: boolean;\n// };\n\n// const TodoList = () => {\n// \tconst { data: todos, isLoading } = useQuery<Todo[]>({\n// \t\tqueryKey: [\"todos\"],\n// \t\tqueryFn: async () => {\n// \t\t\ttry {\n// \t\t\t\tconst res = await fetch(BASE_URL + \"/todos\");\n// \t\t\t\tconst data = await res.json();\n\n// \t\t\t\tif (!res.ok) {\n// \t\t\t\t\tthrow new Error(data.error || \"Something went wrong\");\n// \t\t\t\t}\n// \t\t\t\treturn data || [];\n// \t\t\t} catch (error) {\n// \t\t\t\tconsole.log(error);\n// \t\t\t}\n// \t\t},\n// \t});\n\n// \treturn (\n// \t\t<>\n// \t\t\t<Text\n// \t\t\t\tfontSize={\"4xl\"}\n// \t\t\t\ttextTransform={\"uppercase\"}\n// \t\t\t\tfontWeight={\"bold\"}\n// \t\t\t\ttextAlign={\"center\"}\n// \t\t\t\tmy={2}\n// \t\t\t\tbgGradient='linear(to-l, #0b85f8, #00ffff)'\n// \t\t\t\tbgClip='text'\n// \t\t\t>\n// \t\t\t\tToday's Tasks\n// \t\t\t</Text>\n// \t\t\t{isLoading && (\n// \t\t\t\t<Flex justifyContent={\"center\"} my={4}>\n// \t\t\t\t\t<Spinner size={\"xl\"} />\n// \t\t\t\t</Flex>\n// \t\t\t)}\n// \t\t\t{!isLoading && todos?.length === 0 && (\n// \t\t\t\t<Stack alignItems={\"center\"} gap='3'>\n// \t\t\t\t\t<Text fontSize={\"xl\"} textAlign={\"center\"} color={\"gray.500\"}>\n// \t\t\t\t\t\tAll tasks completed! ðŸ¤ž\n// \t\t\t\t\t</Text>\n// \t\t\t\t\t<img src='/go.png' alt='Go logo' width={70} height={70} />\n// \t\t\t\t</Stack>\n// \t\t\t)}\n// \t\t\t<Stack gap={3}>\n// \t\t\t\t{todos?.map((todo) => (\n// \t\t\t\t\t<TodoItem key={todo._id} todo={todo} />\n// \t\t\t\t))}\n// \t\t\t</Stack>\n// \t\t</>\n// \t);\n// };\n// export default TodoList;\n\n// STARTER CODE:\n\nimport { Flex, Spinner, Stack, Text } from \"@chakra-ui/react\";\nimport { useState } from \"react\";\nimport TodoItem from \"./TodoItem\";\n\nconst TodoList = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const todos = [\n    {\n      _id: 1,\n      body: \"Buy groceries\",\n      completed: true,\n    },\n    {\n      _id: 2,\n      body: \"Walk the dog\",\n      completed: false,\n    },\n    {\n      _id: 3,\n      body: \"Do laundry\",\n      completed: false,\n    },\n    {\n      _id: 4,\n      body: \"Cook dinner\",\n      completed: true,\n    },\n  ];\n  return (\n    <>\n      <Text\n        fontSize={\"4xl\"}\n        textTransform={\"uppercase\"}\n        fontWeight={\"bold\"}\n        textAlign={\"center\"}\n        my={2}\n      >\n        Today's Tasks\n      </Text>\n      {isLoading && (\n        <Flex justifyContent={\"center\"} my={4}>\n          <Spinner size={\"xl\"} />\n        </Flex>\n      )}\n      {!isLoading && todos?.length === 0 && (\n        <Stack alignItems={\"center\"} gap=\"3\">\n          <Text fontSize={\"xl\"} textAlign={\"center\"} color={\"gray.500\"}>\n            All tasks completed! ðŸ¤ž\n          </Text>\n          <img src=\"/go.png\" alt=\"Go logo\" width={70} height={70} />\n        </Stack>\n      )}\n      <Stack gap={3}>\n        {todos?.map((todo) => (\n          <TodoItem key={todo._id} todo={todo} />\n        ))}\n      </Stack>\n    </>\n  );\n};\nexport default TodoList;\n"
        }
    ]
}